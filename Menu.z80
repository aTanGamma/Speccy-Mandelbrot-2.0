; Code to drive the menu screen

    org _FONT_LOCATION
    INCBIN "Packed_Font.bin"
    org _MENU_DATA
    INCBIN "Menu_Data.bin"

    MODULE Draw_Menu
Init
    ld de, 0    ;Screen position (yx)
    ld bc, 0    ;Byte counter
    push bc
Loop_Over_Screen

    ld hl, _MENU_DATA
    pop bc
    add hl, bc
    push bc ;Setup pointer to _MENU_DATA + 300 - bc

    ld a, (hl)
    ld c, a
    ld b, 0 ;Get char. id

    sla c
    rl b
    sla c
    rl b
    sla c
    rl b    ;Multiply id by 8 for pointer

    ld hl, _FONT_LOCATION
    add hl, bc
    ld bc, hl   ;Get pointer to Font data for tile

    push de

    call Plot_Character.Start

    pop de
    pop bc
    inc bc
    push bc

Goto_Next_Char
   
    inc e
    ld a, 32    ;Check if at end of line
    cp e
    jr nz, Loop_Over_Screen

    ld e, 0
    inc d
    ld a, 24
    cp d

    jr nz, Loop_Over_Screen

Blit_Colours

    pop af

    di
    ld hl, _MENU_DATA+$300
    ld de, _COLOUR_ATTRIBUTES_START
    ld bc, $300
    ldir
    ei

    ret

    ENDMODULE

    MODULE Menu_BoxData

;   Database of menu items stored as
;   X, Y, ID, Type (see below)

    BYTE    07, 07, 00, 00  ;X_Pos
    BYTE    15, 07, 01, 00  ;X_Step
    BYTE    07, 09, 02, 00  ;Y_Pos
    BYTE    15, 09, 03, 00  ;Y_Step

    BYTE    23, 07, 04, 01  ;Max iterations  
    
    BYTE    16, 09, 05, 02  ;Sound enable

    BYTE    11, 11, 06, 03  ;1px mode
    BYTE    15, 11, 07, 03  ;2px mode
    BYTE    19, 11, 08, 03  ;4px mode
    BYTE    23, 11, 09, 03  ;8px mode

    BYTE    09, 15, 10, 01  ;Shading Low
    BYTE    16, 15, 11, 01  ;Shading Low
    BYTE    23, 15, 12, 01  ;Shading Low

    BYTE    24, 20, 13, 04  ;Go button

;   Types:
;   00 = "$_.___"   $ + 4 characters text entry, flash this and 4 characters to right
;   01 = "$__"      $ + 2 characters text entry, flash this and 2 characters to right
;   02 = ■          Tickbox (State held elsewhere)
;   03 = ■          Radio button with all other type == 3
;   04 = "Run"      Starts computation

    ENDMODULE